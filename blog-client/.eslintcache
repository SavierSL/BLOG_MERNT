[{"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\index.tsx":"1","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\App.tsx":"2","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\FrontPage.tsx":"3","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\rootReducers.ts":"4","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\store.ts":"5","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\sagas\\sagas.ts":"6","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\types.ts":"7","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\logIn.ts":"8","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\post.ts":"9","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\RegisterPage.tsx":"10","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\register.ts":"11","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\HomePage.tsx":"12","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\light.ts":"13","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\styles.ts":"14","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\dark.ts":"15","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\types.ts":"16","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\alert\\Alert.tsx":"17","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\getTheme.ts":"18","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\alert.ts":"19","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\index.ts":"20","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\blogPost.ts":"21","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\BlogPosts.tsx":"22","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\blogPosts.ts":"23"},{"size":229,"mtime":1611572734403,"results":"24","hashOfConfig":"25"},{"size":1672,"mtime":1611803155389,"results":"26","hashOfConfig":"25"},{"size":2742,"mtime":1611834186270,"results":"27","hashOfConfig":"25"},{"size":218,"mtime":1611807476496,"results":"28","hashOfConfig":"25"},{"size":520,"mtime":1611313811890,"results":"29","hashOfConfig":"25"},{"size":4937,"mtime":1611905399207,"results":"30","hashOfConfig":"25"},{"size":720,"mtime":1611805680000,"results":"31","hashOfConfig":"25"},{"size":297,"mtime":1611314361495,"results":"32","hashOfConfig":"33"},{"size":1396,"mtime":1611806641645,"results":"34","hashOfConfig":"25"},{"size":3499,"mtime":1611747020127,"results":"35","hashOfConfig":"33"},{"size":237,"mtime":1611555814741,"results":"36","hashOfConfig":"25"},{"size":4390,"mtime":1611905153685,"results":"37","hashOfConfig":"25"},{"size":188,"mtime":1611588841669,"results":"38","hashOfConfig":"25"},{"size":327,"mtime":1611631654386,"results":"39","hashOfConfig":"25"},{"size":238,"mtime":1611629077200,"results":"40","hashOfConfig":"33"},{"size":65,"mtime":1611587269005,"results":"41","hashOfConfig":"25"},{"size":506,"mtime":1611749758928,"results":"42","hashOfConfig":"25"},{"size":290,"mtime":1611587333598,"results":"43","hashOfConfig":"25"},{"size":187,"mtime":1611640997684,"results":"44","hashOfConfig":"25"},{"size":85,"mtime":1611586625214,"results":"45","hashOfConfig":"33"},{"size":497,"mtime":1611807726393,"results":"46","hashOfConfig":"25"},{"size":1762,"mtime":1611905446588,"results":"47","hashOfConfig":"25"},{"size":683,"mtime":1611832692798,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"qf0wnc",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"18gkpjn",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\index.tsx",[],["101","102"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\App.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\FrontPage.tsx",["103"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logInAction } from \"../redux/actions/logIn\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport Alert from \"./alert/Alert\";\r\nimport { removeAlertAction } from \"../redux/actions/alert\";\r\nimport { getAllPost } from \"../redux/actions/blogPost\";\r\n\r\nexport interface FrontPageProps {}\r\ninterface logInState {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst FrontPage: React.FC<FrontPageProps> = () => {\r\n  const error = useSelector((state: any) => state.post.msg);\r\n  const isAuth = useSelector((state: any) => state.post.isAuth);\r\n  const [logInInput, setLogInInput] = useState<logInState>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const handleInput = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(removeAlertAction());\r\n    setLogInInput({ ...logInInput, [e.target.name]: e.target.value });\r\n  };\r\n  const { email, password } = logInInput;\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"submitted\");\r\n    dispatch(logInAction(email, password));\r\n  };\r\n  console.log(logInInput);\r\n  if (isAuth === true) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"frontPageContainer\">\r\n        <div className=\"frontPage\">\r\n          <div className=\"frontPage_content\">\r\n            <h1 className=\"primary-heading\">BLOG IT</h1>\r\n            <h1 className=\"primary-heading\">LOG IN</h1>\r\n            <div className=\"frontPage_form\">\r\n              <Alert error={error} />\r\n              <form\r\n                className=\"primary-form\"\r\n                action=\"\"\r\n                onSubmit={(e) => handleSubmit(e)}\r\n              >\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"email\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  value={logInInput.email}\r\n                />\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"password\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={logInInput.password}\r\n                />\r\n                <button className=\"primary-form_primary-button\">LOG IN</button>\r\n              </form>\r\n              <h2>\r\n                <NavLink to=\"/register\">Register</NavLink>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"frontPage2\"></div>{\" \"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrontPage;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\rootReducers.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\store.ts",[],["104","105"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\sagas\\sagas.ts",["106"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\types.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\logIn.ts",[],["107","108"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\post.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\RegisterPage.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\register.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\HomePage.tsx",["109","110","111"],"import { FilePond, registerPlugin } from \"react-filepond\";\r\n\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { blogPostAction, getAllPost } from \"../redux/actions/blogPost\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\n\r\nexport interface HomePageProps {}\r\ninterface BlogPost {\r\n  title: string;\r\n  blogContent: string;\r\n  img: unknown | null | string;\r\n  imgType: string;\r\n}\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginFileEncode,\r\n  FilePondPluginImageResize\r\n);\r\n\r\nconst HomePage: React.FC<HomePageProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state: any) => state.post.token);\r\n  const [file, setFiles] = useState([]);\r\n  const [blogPost, setBlogPost] = useState<BlogPost>({\r\n    title: \"\",\r\n    blogContent: \"\",\r\n    img: null,\r\n    imgType: \"\",\r\n  });\r\n  const { title, blogContent, img, imgType } = blogPost;\r\n  const handleUpdateFIle = (file: any) => {\r\n    setFiles(\r\n      file.map((files: any) => {\r\n        const file = files.file;\r\n        setBlogPost({ ...blogPost, imgType: file.type });\r\n        return file;\r\n      })\r\n    );\r\n  };\r\n  console.log(blogPost.imgType);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(blogPostAction(title, blogContent, img, token, imgType));\r\n\r\n    console.log(blogPost);\r\n  };\r\n  const toBase64 = (file: any) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n\r\n      if (file.length === 1) {\r\n        reader.readAsDataURL(file[0]);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n      }\r\n      return reader;\r\n    });\r\n  let updatedImage: string | unknown;\r\n  const newImage = toBase64(file);\r\n  const dataImage = async () => {\r\n    const newData = await newImage;\r\n    updatedImage = newData;\r\n    return newData;\r\n  };\r\n  dataImage();\r\n  const handleInput = (e: any) => {\r\n    e.preventDefault();\r\n    setBlogPost({\r\n      ...blogPost,\r\n      [e.target.name]: e.target.value,\r\n      img: updatedImage,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"homePage\">\r\n        <h1 className=\"primary-heading\">BLOG IT</h1>\r\n        <div className=\"homePage_content\">\r\n          <button className=\"primary-button\">\r\n            <h2 className=\"secondary-heading\">Create Blog </h2>\r\n          </button>\r\n          <div className=\"homePage_createBlogContainer\">\r\n            <FilePond\r\n              files={file}\r\n              onupdatefiles={(file) => handleUpdateFIle(file)}\r\n              maxFiles={3}\r\n              name=\"files\"\r\n              labelIdle='Drag  Drop your files or <span class=\"filepond--label-action\">Browse</span>'\r\n            />\r\n            <div className=\"frontPage_form\">\r\n              <form\r\n                className=\"primary-form\"\r\n                action=\"\"\r\n                onSubmit={(e) => handleSubmit(e)}\r\n              >\r\n                <input\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"title\"\r\n                  onChange={(e) => handleInput(e)}\r\n                  style={{ width: \"80%\" }}\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  value={blogPost.title}\r\n                />\r\n                <textarea\r\n                  className=\"primary-form_primary-input\"\r\n                  placeholder=\"Caption\"\r\n                  style={{ width: \"100%\", height: \"20rem\" }}\r\n                  onChange={(e) => handleInput(e)}\r\n                  name=\"blogContent\"\r\n                  value={blogPost.blogContent}\r\n                />\r\n              </form>\r\n            </div>\r\n            <button onClick={(e) => handleSubmit(e)}>Submit</button>\r\n            <NavLink to=\"/blog-posts\">blogpostsss</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\light.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\styles.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\dark.ts",["112"],"import { isWhiteSpaceLike } from \"typescript\";\r\n\r\n/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  background: \"black\",\r\n  color: \"#fff\",\r\n  button: {\r\n    color: \"black\",\r\n    background: \"yellow\",\r\n  },\r\n};\r\n","C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\types.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\alert\\Alert.tsx",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\getTheme.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\alert.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\theme\\themes\\index.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\actions\\blogPost.ts",[],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\components\\BlogPosts.tsx",["113","114","115","116"],"C:\\Users\\User\\Documents\\BLOGAPP-MERNT-master\\blog-client\\src\\redux\\reducers\\blogPosts.ts",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":20},{"ruleId":"117","replacedBy":"125"},{"ruleId":"119","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":139,"column":38,"nodeType":"129","messageId":"130","endLine":139,"endColumn":40},{"ruleId":"117","replacedBy":"131"},{"ruleId":"119","replacedBy":"132"},{"ruleId":"121","severity":1,"message":"133","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":12,"column":26,"nodeType":"123","messageId":"124","endLine":12,"endColumn":36},{"ruleId":"121","severity":1,"message":"134","line":13,"column":19,"nodeType":"123","messageId":"124","endLine":13,"endColumn":27},{"ruleId":"121","severity":1,"message":"135","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"136","line":1,"column":21,"nodeType":"123","messageId":"124","endLine":1,"endColumn":29},{"ruleId":"121","severity":1,"message":"134","line":4,"column":19,"nodeType":"123","messageId":"124","endLine":4,"endColumn":27},{"ruleId":"121","severity":1,"message":"137","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":19,"column":6,"nodeType":"140","endLine":19,"endColumn":8,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"@typescript-eslint/no-unused-vars","'getAllPost' is defined but never used.","Identifier","unusedVar",["142"],["143"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["142"],["143"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'isWhiteSpaceLike' is defined but never used.","'useState' is defined but never used.","'blogPost' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [dispatch]",{"range":"147","text":"148"},[625,627],"[dispatch]"]